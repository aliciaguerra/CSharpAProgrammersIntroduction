1. What is C#? 
C# is an object-oriented, type-safe, and managed that is compiled by .NET framework to generate Microsoft Intermmediate
Language.

2. What are some types of comments in C# with examples? 
single line 
//This is a single line comment

multiple line
/*
This is a multiple line comment
We are in line 2
last line of comment
*/

XML 
///summary;
///Set error message for multilingual language
///summary


3. Can multiple catch blocks be executed? 
No. Multiple catch blocks cannot be executed. Once the proper catch code executed, the control is transferred to the finally
block and then the code that follows the finally block gets executed.

4. What is the differentce between public, static, and void? <br>
Public declared variables or methods are accessible anywhere in the application. Static declared variables or methods are
globally accessible without creating an instance of the class. The compiler stores the address of the method as the entry point
and uses this information to begin execution before any objects are created. And void is a type modifier that states that the 
method or variable does not return any value.

5. What is an object?
An object is an instance of a class through which we access the methods of that class. "New" keyword is used to create an
object. A class that creates an object in memory will contain the information about the method, variables, and behavior of
that class.

6. Define constructors.
A constructor is a member fuction in a class that has the same name as its class. The constructor is automatically
invoked whenever an object class is created. It constructs the values of data members while initializing the class.

7. What are jagged arrays?
The array which has elements of type array is called jagged array. The elements can be of different dimensions and sizes.
We can call jagged array as Array of arrays.

8. What is the difference between ref and out parameters?
An argument passed as ref must be initialized before passing to the method whereas out parameter needs not to be initialized
before passing through a method.

9. What is the use of using statement in C#?
The using block is used to obtain a resource and use it and then automatically dispose of when the execution of block is completed.

10. What is serialization?
When we transport an object through a network then we have to convert the object into a stream of bytes. The process of
converting an object into a stream of bytes is called serialization. For an object to be serializable, it should inherit the
serializable interface. De-serialization is the reverse process of creating an object from a stream of bytes.

11. Can "this" be used within a static method?
We can use "this" in a static method because we only use static variables/methods in a static method?

12. What is the difference between constants and read-only?
Constant variables are declared and initialized at compile-time. The value can't be changed afterwards. Read-only variables
will be initialized only from the static constructor of the class. Read only is used only when we want to assign value at run-time.

13. What is the interface class?
Interface is an abstract class which has only public abstract methods and the methods only have the declaration and not the 
definition. These abstract methods must be implemented in the inherited classes.

14. What are value types and reference types?
Value types are stored in the stack whereas reference types are stored on heap.
Value types:
int, enum, byte, decimal, double, float, long

Reference types:
string, class, interface, object


15. What are Custom Control and User Control?
Custom controls are controls generated as compiled code (Dlls), those are easier to use and can be added to toolbox. Developers
can drag and drop controls to their web forms. Attributes can be set at design time. We can easily add custom controls to 
Multiple Applications (If Shared Dll's), if they are private then we copy to Dll to bin directory of web application and then add reference to use them.
User controls are very much similar to ASP include files, and are easy to create. User controls can't be placed in the toolbox
and dragged - dropped from it. They have their design and code behind. The file extension for user controls is ascx.

16. What are sealed classes in C#?
We create sealed classes when we want to restrict the class to be inherited. Sealed modifier used to prevent derivation from a 
class. If we forcefully specify a sealed class as a base class then a compiler-time error occurs.

17. What is method overrloading?
Method overloading is creating multiple methods with the same name with unique signatures in the same class. When we compile,
the compiler uses overload resolution to determine the specific method to invoke.

18. What is the difference between array and arraylist?
In the array, we can have items of the same type only. The size of the array is fixed. An arraylist is similar to an array
but it doesn't have a fixed size.

19. Can a private virtual method be overriden?
No, because they are not accessible outside the class.

20. Describe the accessibility modifier "protected internal".
Protected internal variables/methods are accessible within the same assembly and also from the classes that are derived 
from this parent class.

21. What are the differences between System.String and System.Test.StringBuilder class?
System.String is immutable. When we modify the value of a string variable then a new memory is allocated to the new value and
the previous memory allocation released. System.StringBuilder was designed to have a concept of a mutable string where a variety of operations can be performed without allocation seperate memory location for the modified string.

22. What's the difference between the System.Array.CopyTo() and System.Array.Clone()?
Using Clone() method, we create a new array object containing all the elements in the original array and using CopyTo() method,
all the elements of the exisiting array copies into another existing array. Both the methods perform a shallow copy.

23. How can we sort the elements of the array into descending order?
Using sort() methods followed by reverse() method.

24. Write the C# syntax to catch exception?
To catch an exception, we use try-catch blocks. Catch block can have a parameter of system. Execution type.

try {
GetAllData();
}
catch(Exception ex)
{
}

25. What is the difference between an interface and an abstract class?
Interfaces have all the methods having only declaration but no definition. In an abstract class, we can have some concrete 
methods. In an interface class, all the methods are public. An abstract class may have private methods.

26. What is the difference between Finalize() and Dispose() methods?
Dispose() is called when we want an object to release any unmanaged sources with them. On the other hand, finalize() is used
for the same purpose but it doesn't assure the garbage collection of the object.

27. What are circular references?
Circular reference is situation in which two or more references are interdependent on each other causes the lock condition and
make the resources unusable.

28. What are generics in C#.NET?
Generics are used to make reusable code classes to decrease the code redudancy, increase type safety, and performance. Using
generics, we can create collection classes. To create generic collection, System.Collections.Generic namespace should be used
instead of classes such as ArrayList in the System.Collections namespace. Generics promote the usage of parameterized types.

29. What is an object pool in .NET?
An object pool is a container having objects ready to be used. It tracks the object that is currently in use, total number
of objects in the pool. This reduces the overhead of creating and re-creating objects.

30. List down the most commonly used types of exceptions in .NET?
ArgumentException, ArgumentNullException, ArgumentOutofRangeException, ArithmeticException, DivideByZeroException, 
OverflowException, IndexOutOfRangeException, InvalidCastException, InvalidOperationException, IOEndofStringException, 
NullReferenceException, OutOfMemoryException, StackOverflowException, etc.

31. What are custom exceptions?
Sometimes there are some errors that need to be handled as per user requirements. Custom exceptions are used for them and
are defined exceptions.

32. What are delegates?
Delegates are same as function pointers in C++ but the only difference is that they are type safe unlike function pointers.
Delegates are required because they can be used to write much more generic type safe functions.

33. How do you inherit a class into other class in C#?
Colon is used as an inheritance operator in C#. Just place a colon and then the class name.
public class DerivedClass : BaseClass

34. What is the base class in .NET from which all classes are derived from?
System.Object

35. What is the difference between method overriding and method overloading?
In method overriding, we change the method definition in the derived class that changes the method behavior. Method overloading
is creating a method with the same name within the same class having different signatures.

36. What are the different ways a method can be overloaded?
Methods can be overloaded using different data types for parameter, different order of parameters, and different number of
paramaters.

37. Why can't you specify the accessiblity modifier for methods inside the interface?
In an interface, we have virtual methods that do not have method definition. All the methods are there to be overriden in
the derived class. That's why they are all public.

38. How can we set the class to be inherited, but prevent the method from being over-ridden?
Declare the class as public and make the method sealed to prevent it from being overridden. 

39. What happens if the inherited interfaces have conflicting method names?
Implement is up to you as the method is inside your own class. There might be a problem when the methods from different 
interfaces expect different data, but as far as compiler cares you're okay.
